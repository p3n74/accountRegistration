@page
@model Accounts.Api.Pages.Auth.RegisterModel
@{
    ViewData["Title"] = "Register";
    Layout = "_Layout";
}

<div class="min-vh-100 d-flex align-items-center" style="background: var(--cisco-gradient-background);">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-11 col-xl-10">
                <div class="cisco-card overflow-hidden" style="animation: slideInUp 0.8s ease-out;">
                    <div class="row g-0">
                        <!-- Left side - Enhanced Branding -->
                        <div class="col-lg-5 d-none d-lg-flex">
                            <div class="w-100 d-flex align-items-center justify-content-center text-white position-relative" 
                                 style="background: var(--cisco-gradient-primary); min-height: 700px; overflow: hidden;">
                                <!-- Enhanced Background Pattern -->
                                <div class="position-absolute w-100 h-100 opacity-10">
                                    <div class="floating-circle" style="top: 15%; left: 15%; width: 80px; height: 80px; border: 2px solid white; border-radius: 50%; opacity: 0.3; animation: float 6s ease-in-out infinite;"></div>
                                    <div class="floating-circle" style="top: 45%; right: 10%; width: 120px; height: 120px; border: 2px solid white; border-radius: 50%; opacity: 0.2; animation: float 8s ease-in-out infinite reverse;"></div>
                                    <div class="floating-circle" style="bottom: 25%; left: 25%; width: 60px; height: 60px; border: 2px solid white; border-radius: 50%; opacity: 0.25; animation: float 7s ease-in-out infinite;"></div>
                                    <div class="floating-circle" style="top: 70%; left: 60%; width: 40px; height: 40px; border: 2px solid white; border-radius: 50%; opacity: 0.2; animation: float 9s ease-in-out infinite;"></div>
                                    <div class="floating-circle" style="top: 25%; right: 35%; width: 50px; height: 50px; border: 2px solid white; border-radius: 50%; opacity: 0.15; animation: float 10s ease-in-out infinite reverse;"></div>
                                </div>
                                
                                <!-- Gradient Overlay -->
                                <div class="position-absolute w-100 h-100" style="background: linear-gradient(135deg, rgba(74, 144, 226, 0.05) 0%, rgba(46, 91, 186, 0.05) 100%);"></div>
                                
                                <div class="text-center p-4 position-relative z-index-2">
                                    <div class="mb-4">
                                        <div class="cisco-glass d-inline-flex align-items-center justify-content-center rounded-3 mb-4 cisco-pulse"
                                             style="width: 80px; height: 80px;">
                                            <i class="fas fa-user-plus" style="font-size: 2rem;" aria-hidden="true"></i>
                                        </div>
                                    </div>
                                    <h1 class="display-6 fw-bold mb-3">Join CISCO</h1>
                                    <h3 class="h5 mb-4 opacity-90">Become part of our community</h3>
                                    <p class="mb-5 opacity-80">Connect with fellow students, attend events, and earn achievements</p>
                                    
                                    <div class="row text-center g-3">
                                        <div class="col-12">
                                            <div class="cisco-glass p-3 rounded-3" style="transition: all var(--cisco-transition-base);">
                                                <i class="fas fa-graduation-cap fa-2x mb-2 opacity-80" aria-hidden="true"></i>
                                                <p class="small mb-0 opacity-90">Student Registration</p>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="cisco-glass p-3 rounded-3" style="transition: all var(--cisco-transition-base);">
                                                <i class="fas fa-calendar-check fa-lg mb-2 opacity-80" aria-hidden="true"></i>
                                                <p class="small mb-0 opacity-90">Event Access</p>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="cisco-glass p-3 rounded-3" style="transition: all var(--cisco-transition-base);">
                                                <i class="fas fa-trophy fa-lg mb-2 opacity-80" aria-hidden="true"></i>
                                                <p class="small mb-0 opacity-90">Earn Badges</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Right side - Enhanced Registration Form -->
                        <div class="col-lg-7">
                            <div class="p-5" style="min-height: 700px;">
                                <!-- Mobile Header -->
                                <div class="d-lg-none text-center mb-4">
                                    <div class="cisco-glass d-inline-flex align-items-center justify-content-center rounded-3 mb-3"
                                         style="width: 60px; height: 60px;">
                                        <i class="fas fa-graduation-cap cisco-text-gradient" style="font-size: 1.5rem;" aria-hidden="true"></i>
                                    </div>
                                    <h2 class="h4 mb-0 cisco-text-gradient">CISCO</h2>
                                </div>

                                <!-- Header with Progress -->
                                <div class="text-center mb-4">
                                    <h1 class="h2 fw-bold mb-3">Create Your Account</h1>
                                    <p class="text-muted mb-3">
                                        Already have an account? 
                                        <a href="/auth/login" class="text-decoration-none fw-medium cisco-text-gradient">
                                            Sign in here
                                        </a>
                                    </p>
                                    
                                    <!-- Progress Indicator -->
                                    <div class="progress mb-4" style="height: 4px; border-radius: 2px; background: var(--cisco-gray-100);">
                                        <div class="progress-bar" id="formProgress" 
                                             style="width: 0%; background: var(--cisco-gradient-primary); border-radius: 2px; transition: width 0.3s ease;"
                                             role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                    </div>
                                </div>

                                <!-- Alert Messages -->
                                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                                {
                                    <div class="cisco-alert cisco-alert-error mb-4" role="alert" aria-live="assertive">
                                        <i class="fas fa-exclamation-circle" aria-hidden="true"></i>
                                        <span>@Model.ErrorMessage</span>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                                {
                                    <div class="cisco-alert cisco-alert-success mb-4" role="alert" aria-live="polite">
                                        <i class="fas fa-check-circle" aria-hidden="true"></i>
                                        <span>@Model.SuccessMessage</span>
                                    </div>
                                }

                                <!-- Enhanced Registration Form -->
                                <form method="post" class="needs-validation" novalidate id="registerForm">
                                    <div class="row g-3 mb-4">
                                        <div class="col-md-6">
                                            <label for="FirstName" class="form-label fw-semibold text-dark">
                                                First Name <span class="text-danger">*</span>
                                            </label>
                                            <div class="position-relative">
                                                <input asp-for="FirstName" type="text" class="cisco-input form-control ps-5" 
                                                       placeholder="Enter your first name" required autocomplete="given-name"
                                                       aria-describedby="firstNameHelp">
                                                <i class="fas fa-user position-absolute top-50 translate-middle-y ms-3 text-muted" aria-hidden="true"></i>
                                                <div class="position-absolute top-50 translate-middle-y end-0 me-3" id="firstNameValidation" style="display: none;">
                                                    <i class="fas fa-check-circle text-success" aria-hidden="true"></i>
                                                </div>
                                            </div>
                                            <span asp-validation-for="FirstName" class="text-danger small"></span>
                                            <div id="firstNameHelp" class="form-text small text-muted">At least 2 characters required.</div>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="LastName" class="form-label fw-semibold text-dark">
                                                Last Name <span class="text-danger">*</span>
                                            </label>
                                            <div class="position-relative">
                                                <input asp-for="LastName" type="text" class="cisco-input form-control ps-5" 
                                                       placeholder="Enter your last name" required autocomplete="family-name"
                                                       aria-describedby="lastNameHelp">
                                                <i class="fas fa-user position-absolute top-50 translate-middle-y ms-3 text-muted" aria-hidden="true"></i>
                                                <div class="position-absolute top-50 translate-middle-y end-0 me-3" id="lastNameValidation" style="display: none;">
                                                    <i class="fas fa-check-circle text-success" aria-hidden="true"></i>
                                                </div>
                                            </div>
                                            <span asp-validation-for="LastName" class="text-danger small"></span>
                                            <div id="lastNameHelp" class="form-text small text-muted">At least 2 characters required.</div>
                                        </div>
                                    </div>

                                    <div class="mb-4">
                                        <label for="Email" class="form-label fw-semibold text-dark">
                                            Email Address <span class="text-danger">*</span>
                                        </label>
                                        <div class="position-relative">
                                            <input asp-for="Email" type="email" class="cisco-input form-control ps-5" 
                                                   placeholder="Enter your email address" required autocomplete="email"
                                                   aria-describedby="emailHelp">
                                            <i class="fas fa-envelope position-absolute top-50 translate-middle-y ms-3 text-muted" aria-hidden="true"></i>
                                            <div class="position-absolute top-50 translate-middle-y end-0 me-3" id="emailValidation" style="display: none;">
                                                <i class="fas fa-check-circle text-success" aria-hidden="true"></i>
                                            </div>
                                        </div>
                                        <span asp-validation-for="Email" class="text-danger small"></span>
                                        <div id="emailHelp" class="form-text small text-muted">We'll use this for account verification and notifications.</div>
                                    </div>

                                    <div class="row g-3 mb-4">
                                        <div class="col-md-6">
                                            <label for="Password" class="form-label fw-semibold text-dark">
                                                Password <span class="text-danger">*</span>
                                            </label>
                                            <div class="position-relative">
                                                <input asp-for="Password" type="password" class="cisco-input form-control ps-5 pe-5" 
                                                       placeholder="Create a strong password" required autocomplete="new-password"
                                                       aria-describedby="passwordHelp">
                                                <i class="fas fa-lock position-absolute top-50 translate-middle-y ms-3 text-muted" aria-hidden="true"></i>
                                                <button type="button" class="btn btn-link position-absolute top-50 translate-middle-y end-0 me-2 p-1" 
                                                        id="togglePassword" aria-label="Toggle password visibility">
                                                    <i class="fas fa-eye text-muted" aria-hidden="true"></i>
                                                </button>
                                            </div>
                                            <span asp-validation-for="Password" class="text-danger small"></span>
                                            <div id="passwordHelp" class="form-text small text-muted">
                                                <div class="password-requirements">
                                                    <div class="requirement" id="length-req">
                                                        <i class="fas fa-times text-danger" aria-hidden="true"></i> 8+ characters
                                                    </div>
                                                    <div class="requirement" id="uppercase-req">
                                                        <i class="fas fa-times text-danger" aria-hidden="true"></i> One uppercase letter
                                                    </div>
                                                    <div class="requirement" id="number-req">
                                                        <i class="fas fa-times text-danger" aria-hidden="true"></i> One number
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="ConfirmPassword" class="form-label fw-semibold text-dark">
                                                Confirm Password <span class="text-danger">*</span>
                                            </label>
                                            <div class="position-relative">
                                                <input asp-for="ConfirmPassword" type="password" class="cisco-input form-control ps-5 pe-5" 
                                                       placeholder="Confirm your password" required autocomplete="new-password"
                                                       aria-describedby="confirmPasswordHelp">
                                                <i class="fas fa-lock position-absolute top-50 translate-middle-y ms-3 text-muted" aria-hidden="true"></i>
                                                <button type="button" class="btn btn-link position-absolute top-50 translate-middle-y end-0 me-2 p-1" 
                                                        id="toggleConfirmPassword" aria-label="Toggle password visibility">
                                                    <i class="fas fa-eye text-muted" aria-hidden="true"></i>
                                                </button>
                                            </div>
                                            <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                                            <div id="confirmPasswordHelp" class="form-text small text-muted">Must match your password exactly.</div>
                                        </div>
                                    </div>

                                    <!-- Program Selection -->
                                    <div class="mb-4">
                                        <label for="ProgramId" class="form-label fw-semibold text-dark">
                                            Program <span class="text-muted small">(Optional)</span>
                                        </label>
                                        <div class="position-relative">
                                            <select asp-for="ProgramId" class="cisco-input form-control ps-5" aria-describedby="programHelp">
                                                <option value="">Select your program (optional)</option>
                                                @if (Model.Programs != null)
                                                {
                                                    @foreach (var program in Model.Programs)
                                                    {
                                                        <option value="@program.ProgramId">@program.ProgramName</option>
                                                    }
                                                }
                                            </select>
                                            <i class="fas fa-graduation-cap position-absolute top-50 translate-middle-y ms-3 text-muted" aria-hidden="true"></i>
                                        </div>
                                        <span asp-validation-for="ProgramId" class="text-danger small"></span>
                                        <div id="programHelp" class="form-text small text-muted">Select your academic program to connect with peers.</div>
                                    </div>

                                    <!-- Terms and Privacy -->
                                    <div class="mb-4">
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="termsAgreement" required
                                                   style="border-color: var(--cisco-gray-400);">
                                            <label class="form-check-label small" for="termsAgreement">
                                                I agree to the 
                                                <a href="#" class="cisco-text-gradient text-decoration-none fw-medium">Terms of Service</a> 
                                                and 
                                                <a href="#" class="cisco-text-gradient text-decoration-none fw-medium">Privacy Policy</a>
                                                <span class="text-danger">*</span>
                                            </label>
                                        </div>
                                    </div>

                                    <button type="submit" class="cisco-primary-btn cisco-btn-base w-100 py-3 mb-4" id="registerButton">
                                        <span class="button-text">
                                            <i class="fas fa-user-plus me-2" aria-hidden="true"></i>
                                            Create CISCO Account
                                        </span>
                                        <span class="button-loading" style="display: none;">
                                            <div class="cisco-spinner me-2"></div>
                                            Creating Account...
                                        </span>
                                    </button>
                                </form>

                                <!-- Divider -->
                                <div class="text-center my-4">
                                    <div class="position-relative">
                                        <hr class="my-0" style="border-color: var(--cisco-gray-200);">
                                        <span class="position-absolute top-50 start-50 translate-middle bg-white px-3 text-muted small">
                                            Already a member?
                                        </span>
                                    </div>
                                </div>

                                <!-- Login Link -->
                                <div class="text-center">
                                    <a href="/auth/login" class="cisco-secondary-btn cisco-btn-base w-100 py-3">
                                        <i class="fas fa-sign-in-alt me-2" aria-hidden="true"></i>
                                        Sign In to Existing Account
                                    </a>
                                </div>

                                <!-- Security Notice -->
                                <div class="mt-4 p-3 rounded-3" style="background: var(--cisco-gradient-subtle); border: 1px solid var(--cisco-gray-200);">
                                    <div class="d-flex align-items-start">
                                        <i class="fas fa-shield-alt me-2 mt-1 cisco-text-gradient" aria-hidden="true"></i>
                                        <div>
                                            <small class="fw-medium text-dark">Data Protection</small>
                                            <br>
                                            <small class="text-muted">Your personal information is encrypted and protected according to industry standards.</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('registerForm');
            const firstNameInput = document.getElementById('FirstName');
            const lastNameInput = document.getElementById('LastName');
            const emailInput = document.getElementById('Email');
            const passwordInput = document.getElementById('Password');
            const confirmPasswordInput = document.getElementById('ConfirmPassword');
            const togglePassword = document.getElementById('togglePassword');
            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
            const registerButton = document.getElementById('registerButton');
            const termsCheckbox = document.getElementById('termsAgreement');
            const formProgress = document.getElementById('formProgress');

            // Auto-focus first name field
            if (firstNameInput && !firstNameInput.value) {
                firstNameInput.focus();
            }

            // Password toggle functionality
            function setupPasswordToggle(toggleBtn, passwordField) {
                if (toggleBtn && passwordField) {
                    toggleBtn.addEventListener('click', function() {
                        const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                        passwordField.setAttribute('type', type);
                        
                        const icon = this.querySelector('i');
                        if (type === 'password') {
                            icon.classList.remove('fa-eye-slash');
                            icon.classList.add('fa-eye');
                            this.setAttribute('aria-label', 'Show password');
                        } else {
                            icon.classList.remove('fa-eye');
                            icon.classList.add('fa-eye-slash');
                            this.setAttribute('aria-label', 'Hide password');
                        }
                    });
                }
            }

            setupPasswordToggle(togglePassword, passwordInput);
            setupPasswordToggle(toggleConfirmPassword, confirmPasswordInput);

            // Real-time validation functions
            function validateName(input, validationIcon) {
                const name = input.value.trim();
                if (name.length >= 2) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                    if (validationIcon) validationIcon.style.display = 'block';
                    return true;
                } else if (name.length > 0) {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                    if (validationIcon) validationIcon.style.display = 'none';
                    return false;
                } else {
                    input.classList.remove('is-valid', 'is-invalid');
                    if (validationIcon) validationIcon.style.display = 'none';
                    return false;
                }
            }

                         function validateEmail(input, validationIcon) {
                 const email = input.value.trim();
                 const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                
                if (email && emailRegex.test(email)) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                    if (validationIcon) validationIcon.style.display = 'block';
                    return true;
                } else if (email) {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                    if (validationIcon) validationIcon.style.display = 'none';
                    return false;
                } else {
                    input.classList.remove('is-valid', 'is-invalid');
                    if (validationIcon) validationIcon.style.display = 'none';
                    return false;
                }
            }

            function validatePassword(input) {
                const password = input.value;
                const lengthReq = document.getElementById('length-req');
                const uppercaseReq = document.getElementById('uppercase-req');
                const numberReq = document.getElementById('number-req');
                
                let score = 0;
                
                // Length check
                if (password.length >= 8) {
                    lengthReq.innerHTML = '<i class="fas fa-check text-success" aria-hidden="true"></i> 8+ characters';
                    score++;
                } else {
                    lengthReq.innerHTML = '<i class="fas fa-times text-danger" aria-hidden="true"></i> 8+ characters';
                }
                
                // Uppercase check
                if (/[A-Z]/.test(password)) {
                    uppercaseReq.innerHTML = '<i class="fas fa-check text-success" aria-hidden="true"></i> One uppercase letter';
                    score++;
                } else {
                    uppercaseReq.innerHTML = '<i class="fas fa-times text-danger" aria-hidden="true"></i> One uppercase letter';
                }
                
                // Number check
                if (/[0-9]/.test(password)) {
                    numberReq.innerHTML = '<i class="fas fa-check text-success" aria-hidden="true"></i> One number';
                    score++;
                } else {
                    numberReq.innerHTML = '<i class="fas fa-times text-danger" aria-hidden="true"></i> One number';
                }
                
                if (score === 3) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                    return true;
                } else if (password.length > 0) {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                    return false;
                } else {
                    input.classList.remove('is-valid', 'is-invalid');
                    return false;
                }
            }

            function validateConfirmPassword(passwordInput, confirmInput) {
                const password = passwordInput.value;
                const confirmPassword = confirmInput.value;
                
                if (confirmPassword && password === confirmPassword) {
                    confirmInput.classList.remove('is-invalid');
                    confirmInput.classList.add('is-valid');
                    return true;
                } else if (confirmPassword) {
                    confirmInput.classList.remove('is-valid');
                    confirmInput.classList.add('is-invalid');
                    return false;
                } else {
                    confirmInput.classList.remove('is-valid', 'is-invalid');
                    return false;
                }
            }

            // Update form progress
            function updateProgress() {
                let completedFields = 0;
                const totalFields = 6; // firstName, lastName, email, password, confirmPassword, terms
                
                if (validateName(firstNameInput, document.getElementById('firstNameValidation'))) completedFields++;
                if (validateName(lastNameInput, document.getElementById('lastNameValidation'))) completedFields++;
                if (validateEmail(emailInput, document.getElementById('emailValidation'))) completedFields++;
                if (validatePassword(passwordInput)) completedFields++;
                if (validateConfirmPassword(passwordInput, confirmPasswordInput)) completedFields++;
                if (termsCheckbox.checked) completedFields++;
                
                const progress = (completedFields / totalFields) * 100;
                formProgress.style.width = progress + '%';
                formProgress.setAttribute('aria-valuenow', progress);
            }

            // Set up event listeners
            firstNameInput.addEventListener('input', function() {
                validateName(this, document.getElementById('firstNameValidation'));
                updateProgress();
            });

            lastNameInput.addEventListener('input', function() {
                validateName(this, document.getElementById('lastNameValidation'));
                updateProgress();
            });

            emailInput.addEventListener('input', function() {
                validateEmail(this, document.getElementById('emailValidation'));
                updateProgress();
            });

            passwordInput.addEventListener('input', function() {
                validatePassword(this);
                validateConfirmPassword(this, confirmPasswordInput);
                updateProgress();
            });

            confirmPasswordInput.addEventListener('input', function() {
                validateConfirmPassword(passwordInput, this);
                updateProgress();
            });

            termsCheckbox.addEventListener('change', updateProgress);

            // Enhanced form submission
            form.addEventListener('submit', function(e) {
                const firstName = firstNameInput.value.trim();
                const lastName = lastNameInput.value.trim();
                const email = emailInput.value.trim();
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                
                // Comprehensive validation
                let isValid = true;
                let firstInvalidField = null;
                
                if (firstName.length < 2) {
                    isValid = false;
                    if (!firstInvalidField) firstInvalidField = firstNameInput;
                }
                
                if (lastName.length < 2) {
                    isValid = false;
                    if (!firstInvalidField) firstInvalidField = lastNameInput;
                }
                
                                 const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                if (!emailRegex.test(email)) {
                    isValid = false;
                    if (!firstInvalidField) firstInvalidField = emailInput;
                }
                
                if (password.length < 8 || !/[A-Z]/.test(password) || !/[0-9]/.test(password)) {
                    isValid = false;
                    if (!firstInvalidField) firstInvalidField = passwordInput;
                }
                
                if (password !== confirmPassword) {
                    isValid = false;
                    if (!firstInvalidField) firstInvalidField = confirmPasswordInput;
                }
                
                if (!termsCheckbox.checked) {
                    isValid = false;
                    showAlert('Please agree to the Terms of Service and Privacy Policy.', 'error');
                }
                
                if (!isValid) {
                    e.preventDefault();
                    if (firstInvalidField) {
                        firstInvalidField.focus();
                        firstInvalidField.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                    return false;
                }
                
                // Show loading state
                showLoadingState();
            });

            // Show loading state
            function showLoadingState() {
                const buttonText = registerButton.querySelector('.button-text');
                const buttonLoading = registerButton.querySelector('.button-loading');
                
                buttonText.style.display = 'none';
                buttonLoading.style.display = 'flex';
                buttonLoading.style.alignItems = 'center';
                buttonLoading.style.justifyContent = 'center';
                
                registerButton.disabled = true;
                
                // Auto-hide after 10 seconds as fallback
                setTimeout(function() {
                    buttonText.style.display = 'flex';
                    buttonLoading.style.display = 'none';
                    registerButton.disabled = false;
                }, 10000);
            }

            // Show alert function
            function showAlert(message, type) {
                const existingAlerts = document.querySelectorAll('.dynamic-alert');
                existingAlerts.forEach(alert => alert.remove());
                
                const alertDiv = document.createElement('div');
                alertDiv.className = `cisco-alert cisco-alert-${type} mb-4 dynamic-alert`;
                alertDiv.setAttribute('role', 'alert');
                alertDiv.innerHTML = `
                    <i class="fas fa-${type === 'error' ? 'exclamation-circle' : 'check-circle'}" aria-hidden="true"></i>
                    <span>${message}</span>
                `;
                
                form.insertBefore(alertDiv, form.firstChild);
                
                setTimeout(() => {
                    if (alertDiv.parentNode) {
                        alertDiv.style.opacity = '0';
                        alertDiv.style.transform = 'translateY(-10px)';
                        setTimeout(() => alertDiv.remove(), 300);
                    }
                }, 5000);
            }

            // Keyboard navigation
            const inputs = [firstNameInput, lastNameInput, emailInput, passwordInput, confirmPasswordInput];
            inputs.forEach((input, index) => {
                input.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        if (index < inputs.length - 1) {
                            inputs[index + 1].focus();
                        } else {
                            registerButton.focus();
                        }
                    }
                });
            });

            // Initial progress update
            updateProgress();
        });
    </script>
}

@section Styles {
    <style>
        .z-index-2 {
            z-index: 2;
        }
        
        /* Enhanced input styling */
        .cisco-input {
            border: 2px solid var(--cisco-gray-200);
            transition: all var(--cisco-transition-base);
            background: var(--cisco-white);
        }
        
        .cisco-input:focus {
            background: white;
            border-color: var(--cisco-primary-blue);
            box-shadow: 0 0 0 4px rgba(74, 144, 226, 0.1);
        }
        
        .cisco-input.is-valid {
            border-color: var(--cisco-success);
            background-image: none;
        }
        
        .cisco-input.is-invalid {
            border-color: var(--cisco-danger);
            background-image: none;
        }
        
        /* Form check styling */
        .form-check-input:checked {
            background-color: var(--cisco-primary-blue);
            border-color: var(--cisco-primary-blue);
        }
        
        .form-check-input:focus {
            border-color: var(--cisco-primary-blue);
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(74, 144, 226, 0.25);
        }
        
        /* Enhanced card styling */
        .cisco-card {
            box-shadow: var(--cisco-shadow-2xl);
            border: none;
        }
        
        /* Custom select styling */
        select.cisco-input {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 12px center;
            background-repeat: no-repeat;
            background-size: 16px 12px;
            padding-right: 40px;
            appearance: none;
        }
        
        /* Password requirements styling */
        .password-requirements {
            display: grid;
            gap: 4px;
            margin-top: 8px;
        }
        
        .requirement {
            font-size: 0.75rem;
            display: flex;
            align-items: center;
            gap: 6px;
            transition: all var(--cisco-transition-fast);
        }
        
        /* Floating animations */
        @@keyframes float {
            0%, 100% {
                transform: translateY(0px);
            }
            50% {
                transform: translateY(-20px);
            }
        }
        
        .floating-circle {
            position: absolute;
        }
        
        /* Button loading state */
        .button-loading {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        /* Glass effect hover states */
        .cisco-glass:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
        }
        
        /* Password toggle buttons */
        #togglePassword,
        #toggleConfirmPassword {
            border: none;
            background: none;
            color: var(--cisco-gray-500);
            transition: color var(--cisco-transition-fast);
        }
        
        #togglePassword:hover,
        #toggleConfirmPassword:hover {
            color: var(--cisco-primary-blue);
        }
        
        #togglePassword:focus,
        #toggleConfirmPassword:focus {
            outline: 2px solid var(--cisco-primary-blue);
            outline-offset: 2px;
        }
        
        /* Progress bar animation */
        .progress-bar {
            transition: width 0.3s ease;
        }
        
        /* Responsive adjustments */
        @@media (max-width: 992px) {
            .min-vh-100 {
                padding: var(--cisco-space-8) 0;
            }
        }
        
        @@media (max-width: 768px) {
            .cisco-card .p-5 {
                padding: var(--cisco-space-8) !important;
            }
            
            .row.g-3 {
                --bs-gutter-x: 1rem;
                --bs-gutter-y: 1rem;
            }
            
            .display-6 {
                font-size: var(--cisco-text-3xl) !important;
            }
        }
        
        @@media (max-width: 576px) {
            .cisco-card .p-5 {
                padding: var(--cisco-space-6) !important;
            }
            
            .cisco-btn-base {
                padding: var(--cisco-space-4) var(--cisco-space-5);
            }
            
            .password-requirements {
                grid-template-columns: 1fr;
            }
        }
        
        /* Print styles */
        @@media print {
            .floating-circle {
                display: none;
            }
            
            .cisco-glass {
                background: var(--cisco-gray-100);
                backdrop-filter: none;
            }
            
            .password-requirements {
                display: none;
            }
        }
        
        /* High contrast mode */
        @@media (prefers-contrast: high) {
            .cisco-input {
                border: 3px solid var(--cisco-gray-600);
            }
            
            .cisco-input:focus {
                border-color: var(--cisco-primary-blue);
                outline: 2px solid var(--cisco-primary-blue);
            }
            
            .requirement {
                font-weight: 600;
            }
        }
        
        /* Reduced motion */
        @@media (prefers-reduced-motion: reduce) {
            .floating-circle {
                animation: none;
            }
            
            .cisco-card {
                animation: none;
            }
            
            .progress-bar {
                transition: none;
            }
        }
        
        /* Dark mode support */
        @@media (prefers-color-scheme: dark) {
            .cisco-input {
                background: var(--cisco-gray-800);
                border-color: var(--cisco-gray-600);
                color: var(--cisco-gray-100);
            }
            
            .cisco-input::placeholder {
                color: var(--cisco-gray-400);
            }
            
            select.cisco-input {
                background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23d1d5db' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            }
        }
    </style>
} 